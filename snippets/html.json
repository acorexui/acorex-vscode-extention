{
   "ax-action-sheet":{
    "prefix": "ax-action-sheet",
    "body": [
      "<ax-action-sheet caption=\"${1:caption}\">",
      "  <ax-action-sheet-item *ngFor=\"let item of actionItems\" color=\"${2:light}\" [text]=\"${3:item.text}\">",
      "  </ax-action-sheet-item>",
      "</ax-action-sheet>"
    ],
    "description": "Avatars can be used to represent people or objects."
  },
  "ax-alert": {
    "prefix": "ax-alert",
    "body": [
      "<ax-alert color=\"${1:primary}\">",
      "   <ax-alert-title>${2:title}</ax-alert-title>",
      "   <ax-alert-content>${3:content}</ax-alert-content>",
      "</ax-alert>"
    ],
    "description": "An alert displays a short, important message in a way that attracts the user's attention without interrupting the user's task."
  },
  "ax-avatar":{
    "prefix": "ax-avatar",
    "body": [
      "<ax-avatar type=\"${1:text}\" text=\"${1:Avatar}\" class=\"ax-w-10 ax-h-10  ax-me-1\"></ax-avatar>"
    ],
    "description": "Avatars can be used to represent people or objects."
  },
  "ax-badge": {
    "prefix": "ax-badge",
    "body": [
      "<ax-badge text=\"${1:Badge}\" color=\"${2:primary}\"></ax-badge>"
    ],
    "description": "Badges are mostly used to highlight ancillary information and bring attention to an element."
  },
  "ax-breadcrumbs": {
    "prefix": "ax-breadcrumbs",
    "body": [
      "<ax-breadcrumbs>",
      "    <ax-breadcrumbs-item text=\"${1:Home}\"></ax-breadcrumbs-item>",
      "    <ax-breadcrumbs-item text=\"${1:Product}\"></ax-breadcrumbs-item>",
      "    <ax-breadcrumbs-item text=\"${1:Digitals}\"></ax-breadcrumbs-item>",
      "    <ax-breadcrumbs-item text=\"${1:Playstation Plus}\"></ax-breadcrumbs-item>",
      "</ax-breadcrumbs>"
    ],
    "description": "A breadcrumb displays the current location within a hierarchy. It allows going back to states higher up in the hierarchy."
  },
  "ax-button": {
    "prefix": "ax-button",
    "body": [
      "<ax-button color=\"${1:dark}\" text=\"${2:Button}\"></ax-button>"
    ],
    "description": "Button Component is used to trigger an action or event, submitting forms, opening dialog boxes, and other porpuses in different sizes and looks."
  },
  "ax-button-group": {
    "prefix": "ax-button-group",
    "body": [
      "<ax-button-group color=\"${1:primary}\" (onItemClick)=\"${2:handleOnItemClick($event)}\">",
      "  <ax-button text=\"${3:Bold}\">",
      "    <ax-prefix>",
      "     <ax-icon icon=\"${4:}\"></ax-icon>",
      "    </ax-prefix>",
      "  </ax-button>",
      "  <ax-button text=\"${3:Italic}\">",
      "   <ax-prefix>",
      "     <ax-icon icon=\"${6:}\">",
      "     </ax-icon>",
      "   </ax-prefix>",
      "  </ax-button>",
      "  <ax-button text=\"${7:Underline}\">",
      "   <ax-prefix>",
      "     <ax-icon icon=\"${8:}\"></ax-icon>",
      "   </ax-prefix>",
      "  </ax-button>",
      "</ax-button-group>"
    ],
    "description": "You can use the Button Group component to group buttons. You can use different modes to group multiple buttons."
  },
  "ax-calendar": {
    "prefix": "ax-calendar",
    "body": [
      "<ax-calendar (onValueChanged)=\"${1:handleValueChanged($event)}\"></ax-calendar>"
    ],
    "description": "To define the start date of the range, use the min property. To define the end date of the range, use the max property"
  },
  "ax-carousel": {
    "prefix": "ax-carousel",
    "body": [
      "<ax-carousel width=\"${1:100%}\" height=\"${2:100%}\" [perMove]=\"${3:1}\" [perPage]=\"${4:1}\" [wheel]=\"${5:true}\" [snap]=\"${6:true}\"",
      " [rewind]=\"${7:true}\">",
      "   <ax-carousel-item class=\"ax-h-full\" *ngFor=\"let carouselItem of ${8:_carouselItems}\">",
      "    <article class=\"ax-flex-col ax-flex ax-items-center\" (click)=\"${9:_handleOnItemClick}(param)",
      "       <div class=\"ax-w-20 ax-h-20 ax-p-2 lg:ax-h-24 lg:ax-w-24 lg:ax-p-3 ax-bg-white ax-flex ax-items-center",     "       ax-cursor-pointer ax-justify-center ax-shadow-md ax-rounded-md",
      "       <img width=\"100%\" [src]=\"carouselItem.image\" alt=\"avatar\" />",
      "       </div>",
      "       <h5 class=\"ax-font-medium ax-my-2 ax-text-sm ax-block\">{{carouselItem.title}}</h5>",
      "    </article>",
      "   </ax-carousel-item>",
      "   <ax-carousel-arrows class=\"ax-text-dark-400\"></ax-carousel-arrows>",
      "</ax-carousel>"
    ],
    "description": "To define the start date of the range, use the min property. To define the end date of the range, use the max property"
  },
  "ax-check-box": {
    "prefix": "ax-check-box",
    "body": [
      "<ax-check-box [value]=\"${1:}\"></ax-check-box>"
    ],
    "description": "Checkboxes allow the user to select one or more items from a set."
  },
  "ax-collapse": {
    "prefix": "ax-collapse",
    "body": [
      "<ax-collapse caption=\"${1:panel header}\">  </ax-collapse>"
    ],
    "description": "A content area which can be collapsed and expanded."
  },
  "ax-date-picker": {
    "prefix": "ax-date-picker",
    "body": [
      "<ax-date-picker format=\"${1:MMM / YYYY -  dd}\" [value]=\"${2:}\" ></ax-date-picker>"
    ],
    "description": "The datepicker is tied to a standard form input field. Focus on the input (click, or use the tab key) to open an interactive calendar in a small overlay."
  },
  "ax-dropdown-button": {
    "prefix": "ax-dropdown-button",
    "body": [
      "<ax-button text=\"${1:}\">",
      "  <ax-dropdown-panel (onItemClick)=\"${2:handleOnItemClick($event)}\">",
      "     <ax-button-item text=\"${3:}\" name=\"${4:}\">",
      "       <ax-prefix>",
      "        <ax-icon icon=\"${5:}\"></ax-icon>",
      "       </ax-prefix>",
      "     </ax-button-item>",
      "     <ax-button-item text=\"${6:}\" color=\"${7:}\" name=\"${8:}\">",
      "       <ax-prefix>",
      "       <ax-icon icon=\"${9:}\"></ax-icon>",
      "       </ax-prefix>",
      "     </ax-button-item>",
      "  </ax-dropdown-panel>",
      "       <ax-suffix>",
      "         <ax-icon icon=\"${10:}\"></ax-icon>",
      "       </ax-suffix>",
      "</ax-button>"
    ],
    "description": "Dropdowns are toggleable, contextual overlays for displaying lists of links and more."
  },
  "ax-menu": {
    "prefix": "ax-menu",
    "body": [
      "<ax-menu [textField]=\"'${1:}'\"  [items]=\"${2:}\" [hasChildField]=\"'${3:}'\"  [icon]=\"'${4:}'\" [disableField]=\"'${5:}'\" (onMenuItemClick)=\"${5:onMenuItemClick($event)}\"></ax-menu>"
    ],
    "description": "create menu"
  },
  "ax-form-validation": {
    "prefix": "ax-form-validation",
    "body": [
      "<ax-form #validationForm>",
      " <ax-form-field>",
      "  <ax-text-box class=\"ax-text-2xl\">",
      "   <ax-validation-rule message=\"${1:textbox can't be empty}\" rule=\"${2:required}\">",
      "   </ax-validation-rule>",
      "  </ax-text-box>",
      " </ax-form-field>",
      " <ax-button (click)=\"triggerValidation()\" class=\"ax-mt-2\" text=\"${3:send}\" color=\"${4:primary}\">",
      " </ax-button>",
      " <p>Try yourself: Tap to click button with empty field.</p>",
      " <p class=\"ax-text-danger-500 ax-text-sm\">Note: Make sure to use ax-validation-rule inside ax-form-field wrapper.</p>",
      "</ax-form>"
    ],
    "description": "A Form shows a set of related fields in a structured way with validation feature."
  },
  "ax-number-box": {
    "prefix": "ax-number-box",
    "body": [
      " <ax-number-box [decimals]=\"${1:}\"  allowNull=\"${2:}\" [minValue]=\"${3:}\" [maxValue]=\"${4:}\"  [thousandsSeparator]=\"${5:}\" [(value)]=\"${5:}\"[padDecimalZeros]=\"${6:}\"></ax-number-box>"
    ],
    "description": "create number-box"
  },
  "ax-password-box": {
    "prefix": "ax-password-box",
    "body": [
      "<ax-password-box [showToggleButton]=\"${1:true}\"></ax-password-box>"
    ],
    "description": "create password-box"
  },
  "ax-progress-bar": {
    "prefix": "ax-progress-bar",
    "body": [
      "<ax-progress-bar color=\"${1:secondary}\" [value]=\"${2:}\" ></ax-progress-bar>"
    ],
    "description": "create progress-bar"
  },
  "ax-result": {
    "prefix": "ax-result",
    "body": [
      "<ax-result type=\"${1:success}\" caption=\"${2:Invoice paid successfully}\"",
      "   description=\"${3:Payment has been completed successfully and your service will be activated in a few minutes.",
      "   You can view your current account history and service status in the user panel.}\">",
      "   <div class=\"ax-flex ax-items-center\">",
      "     <ax-button color=\"${4:dark}\" text=\"${5:Return to the panel}\" class=\"ax-mx-auto\">",
      "         <ax-prefix>",
      "             <ax-icon>",
      "                 <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"ax-h-6 ax-w-6\" fill=\"none\"",
      "                 viewBox=\"0 0 24 24\" stroke=\"currentColor\" stroke-width=\"2\">",
      "                 <path stroke-linecap=\"round\" stroke-linejoin=\"round",
      "                 d=\"M10 19l-7-7m0 0l7-7m-7 7h18\" />",
      "                 </svg>",
      "             </ax-icon>",
      "         </ax-prefix>",
      "     </ax-button>",
      "   </div>",
    "</ax-result>"
    ],
    "description": "create result"
  },
  "ax-rating": {
    "prefix": "ax-rating",
    "body": [
      "<div class=\"ax-rating-container\" #stars>",
      "   <ng-container *ngFor=\"let star of stars\">",
      "       <span class=\"ax-rating-start ax-ic-star-outline ax-text-2xl\" (click)=\"handleStarClick(item)\"></span>",
      "   </ng-container>",
      "</div>"
    ],
    "description": "create ratings"
  },
  "ax-radio": {
    "prefix": "ax-radio",
    "body": [
      "<ax-radio [disabled]=\"${1:false}\"><ax-label>${2:title}</ax-label></ax-radio>"
    ],
    "description": "create radio-button"
  },
  "ax-select-box": {
    "prefix": "ax-select-box",
    "body": [
      "<ax-select-box [items]=\"${1:}\"  textField=\"${2:}\" valueField=\"${3:}\" [value]=\"${4:}\"  multiple=\"${5:false}\"  [checkbox]=\"${6:false}\" allowNull=\"${7:true}\" [searchSettings]=\"{enabled: ${8:true}}\"></ax-select-box>"
    ],
    "description": "create select-box"
  },
  "ax-selection-list": {
    "prefix": "ax-selection-list",
    "body": [
      "<ax-selection-list  [items]=\"${1:}\" valueField=\"${2:}\" textField=\"${3:}\" [direction]=\"${4:'horizontal'}\"></ax-selection-list>"
    ],
    "description": "create selection-list"
  },
  "ax-skelton": {
    "prefix": "ax-skelton",
    "body": [
      "<div class=\"ax-flex\">",
      " <div class=\"ax-block ax-w-28 ax-h-28 ax-skeleton\"></div>",
      " <div class=\"ax-ms-3\">",
      "     <div class=\"ax-block ax-w-60 ax-h-8 ax-skeleton\"></div>",
      "     <div class=\"ax-block ax-w-44 ax-h-4 ax-mt-2 ax-skeleton\"></div>",
      "     <div class=\"ax-block ax-w-12 ax-h-8 ax-mt-6 ax-skeleton\"></div>",
      " </div>",
      "</div>"
    ],
    "description": "Skeleton loading screens provide an approximate representation of a site layout while a page is loading data"
  },
  "ax-switch": {
    "prefix": "ax-switch",
    "body": [
      "<ax-switch [value]=\"${1:}\"></ax-switch>"
    ],
    "description": "create switch"
  },
  "ax-table": {
    "prefix": "ax-table",
    "body": [
      "<table class=\"ax-table\">",
      " <thead>",
      "   <tr>",
      "     <th>First Name</th>",
      "     <th>Last Name</th>",
      "     <th>Hero Title</th>",
      "   </tr>",
      " </thead>",
      " <tbody>",
      "   <tr>",
      "     <td data-label=\"First Name\">Bruce</td>",
      "     <td data-label=\"Last Name\">Wayne</td>",
      "     <td data-label=\"Hero Title\">Batman</td>",
      "   </tr>",
      "   <tr>",
      "     <td data-label=\"First Name\">Peter</td>",
      "     <td data-label=\"Last Name\">Parker</td>",
      "     <td data-label=\"Hero Title\">Spiderman</td>",
      "   </tr>",
      "   <tr>",
      "     <td data-label=\"First Name\">Bruce</td>",
      "     <td data-label=\"Last Name\">Banner</td>",
      "     <td data-label=\"Hero Title\">The Hulk</td>",
      "   </tr>",
      "   <tr>",
      "     <td data-label=\"First Name\">Clark</td>",
      "     <td data-label=\"Last Name\">Kent</td>",
      "     <td data-label=\"Hero Title\">Superman</td>",
      "   </tr>",
      " </tbody>",
      "</table>"
    ],
    "description": "The table component is the only set of classes that you can use to have a simple but efficient table."
  },
  "ax-tabs": {
    "prefix": "ax-tabs",
    "body": [
      "<ax-tabs class=\"ax-look-${1:pills-color} mytabs ax-tabs-fit ax-w-full\">",
      " <ax-tab-item text=\"${2:tabName1}\" (activeChange)=\"_handleActiveChange1($event)\"></ax-tab-item>",
      " <ax-tab-item text=\"${2:tabName2}\" (activeChange)=\"_handleActiveChange2($event)\"></ax-tab-item>",
      "</ax-tabs>"
    ],
    "description": "A view that switches between multiple child views using interactive user interface elements."
  },
  "ax-text-box": {
    "prefix": "ax-text-box",
    "body": [
      "<ax-text-box></ax-text-box>"
    ],
    "description": "create text-box"
  },
  "ax-input-mask": {
    "prefix": "ax-input-mask",
    "body": [
      " <ax-input-mask mask=\"${1:00000000000}\"></ax-input-mask>"
    ],
    "description": "create text-box"
  },
  "ax-loading": {
    "prefix": "ax-loading",
    "body": [
      "<ax-button  color=\"primary\" class=\"ax-w-full\" [text]=\"some text\" [disabled]=\"isLoading\">",
          "<ax-loading *ngIf=\"isLoading\"></ax-loading>",
      "</ax-button>"
    ],
    "description": "create text-box"
  },
  
 "ax-textarea": {
    "prefix": "ax-textarea",
    "body": [
      "<ax-textarea></ax-textarea>"
    ],
    "description": "The ax-textarea tag defines a multi-line text input control."
  },
  "ax-page-footer": {
    "prefix": "ax-page-footer",
    "body": [
      "<ax-page-footer></ax-page-footer>"
    ],
    "description": "Adds Footer Seprator to the popup"
  },
  "ax-suffix": {
    "prefix": "ax-suffix",
    "body": [
      "<ax-suffix></ax-suffix>"
    ],
    "description": "suffix for items"
  },
  "ax-prefix": {
    "prefix": "ax-prefix",
    "body": [
      "<ax-prefix></ax-prefix>"
    ],
    "description": "prefix for items"
  },
  "ax-icon": {
    "prefix": "ax-icon",
    "body": [
      "     <ax-icon>",
      "       <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"ax-h-6 ax-w-6\" fill=\"none\" viewBox=\"0 0 24 24\"",
      "       stroke=\"currentColor\" stroke-width=\"2\">",
      "       <path stroke-linecap=\"round\" stroke-linejoin=\"round",
      "       d=\"M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2",
      "       0 002 2z\" />",
      "       </svg>",
      "     </ax-icon>"
    ],
    "description": "add svg icon"
  },

  "ax-icon-in-button": {
    "prefix": "ax-icon-in-button",
    "body": [
      "<ax-button class=\"ax-sm\" look=\"blank\" (onClick)=\"_onButtoClick\">",
      "   <ax-prefix>",
      "     <ax-icon>",
      "       <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"ax-h-6 ax-w-6\" fill=\"none\" viewBox=\"0 0 24 24\"",
      "       stroke=\"currentColor\" stroke-width=\"2\">",
      "       <path stroke-linecap=\"round\" stroke-linejoin=\"round",
      "       d=\"M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2",
      "       0 002 2z\" />",
      "       </svg>",
      "     </ax-icon>",
      "   </ax-prefix>",
      "</ax-button>"
    ],
    "description": "add icon inside button"
  },
  "ax-loading-in-button": {
    "prefix": "ax-loading-in-button",
    "body": [
      "<ax-button class=\"ax-sm\" look=\"blank\" (onClick)=\"_onButtoClick\">",
      "  <ax-loading *ngIf=\"loading\"></ax-loading>", 
      "</ax-button>"
    ],
    "description": "add loading inside button"
  }
}